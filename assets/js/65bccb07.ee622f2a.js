"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[291],{7137:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var o=s(5893),i=s(1151);const t={},r="org.osbuild.systemd-journald",d={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd-journald",title:"org.osbuild.systemd-journald",description:"Configures systemd-journald",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.systemd-journald.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd-journald",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd-journald",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.systemd-journald.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.sysctld",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.sysctld"},next:{title:"org.osbuild.systemd-logind",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd-logind"}},l={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"orgosbuildsystemd-journald",children:"org.osbuild.systemd-journald"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Configures systemd-journald"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"config"})," option allows to create a systemd-journald configuration drop-in\nfile in ",(0,o.jsx)(n.code,{children:"/usr/lib/systemd/journald.conf.d"})," with the name ",(0,o.jsx)(n.code,{children:"filename"}),".\nDrop-in configuration files can specify the following subset of options:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["'Journal' section","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"'Storage' option"}),"\n",(0,o.jsx)(n.li,{children:"'Compress' option"}),"\n",(0,o.jsx)(n.li,{children:"'SplitMode' option"}),"\n",(0,o.jsx)(n.li,{children:"'MaxFileSec' option"}),"\n",(0,o.jsx)(n.li,{children:"'MaxRetentionSec' option"}),"\n",(0,o.jsx)(n.li,{children:"'SyncIntervalSec' option"}),"\n",(0,o.jsx)(n.li,{children:"'Audit' option\nAt least one option must be specified in the 'Journal' section."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "required": [\n    "filename",\n    "config"\n  ],\n  "properties": {\n    "filename": {\n      "type": "string",\n      "description": "Name of the systemd-journald drop-in file",\n      "pattern": "^[a-zA-Z0-9_\\\\.-]{1,250}\\\\.conf$"\n    },\n    "config": {\n      "additionalProperties": false,\n      "type": "object",\n      "description": "systemd-journald configuration",\n      "minProperties": 1,\n      "properties": {\n        "Journal": {\n          "additionalProperties": false,\n          "type": "object",\n          "description": "\'Journal\' configuration section",\n          "minProperties": 1,\n          "properties": {\n            "Storage": {\n              "type": "string",\n              "description": "Controls where to store journal data.",\n              "enum": [\n                "volatile",\n                "persistent",\n                "auto",\n                "none"\n              ]\n            },\n            "Compress": {\n              "type": "string",\n              "description": "Sets whether the data objects stored in the journal should be compressed or not. Can also take threshold values."\n            },\n            "SplitMode": {\n              "type": "string",\n              "description": "Splits journal files per user or to a single file.",\n              "enum": [\n                "uid",\n                "none"\n              ]\n            },\n            "MaxFileSec": {\n              "type": "string",\n              "description": "Max time to store entries in a single file. By default seconds, may be sufixed with units to override this."\n            },\n            "MaxRetentionSec": {\n              "type": "string",\n              "description": "Maximum time to store journal entries."\n            },\n            "SyncIntervalSec": {\n              "type": "string",\n              "description": "Timeout before synchronizing journal files to disk."\n            },\n            "Audit": {\n              "type": "string",\n              "description": "Enables/Disables kernel auditing on start-up, leaves it as is if unspecified.",\n              "enum": [\n                "yes",\n                "no",\n                ""\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>r});var o=s(7294);const i={},t=o.createContext(i);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);