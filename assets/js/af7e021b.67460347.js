"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[2687],{8055:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var t=o(5893),s=o(1151);const r={},d="org.osbuild.bootupd",i={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.bootupd",title:"org.osbuild.bootupd",description:"Install GRUB on both BIOS and UEFI systems,",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.bootupd.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootupd",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootupd",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.bootupd.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.bootupd.gen-metadata",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.bootupd.gen-metadata"},next:{title:"org.osbuild.btrfs.subvol",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.btrfs.subvol"}},a={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"orgosbuildbootupd",children:"org.osbuild.bootupd"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Install GRUB on both BIOS and UEFI systems,\nensuring that your bootloader stays up-to-date."})}),"\n",(0,t.jsx)(n.p,{children:"Bootupd supports updating GRUB and shim for\nUEFI firmware on x86_64 and aarch64,\nand GRUB for BIOS firmware on x86_64.\nThe project is deployed in Fedora CoreOS and derivatives"}),"\n",(0,t.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "devices": {\n    "type": "object",\n    "additionalProperties": true\n  },\n  "mounts": {\n    "type": "array"\n  },\n  "options": {\n    "additionalProperties": false,\n    "properties": {\n      "deployment": {\n        "type": "object",\n        "additionalProperties": false,\n        "oneOf": [\n          {\n            "properties": {\n              "default": {\n                "enum": [\n                  false\n                ]\n              }\n            },\n            "required": [\n              "osname",\n              "ref"\n            ]\n          },\n          {\n            "properties": {\n              "default": {\n                "enum": [\n                  true\n                ]\n              }\n            },\n            "not": {\n              "anyOf": [\n                {\n                  "required": [\n                    "osname"\n                  ]\n                },\n                {\n                  "required": [\n                    "ref"\n                  ]\n                },\n                {\n                  "required": [\n                    "serial"\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        "properties": {\n          "osname": {\n            "description": "Name of the stateroot to be used in the deployment",\n            "type": "string"\n          },\n          "ref": {\n            "description": "OStree ref to create and use for deployment",\n            "type": "string"\n          },\n          "serial": {\n            "description": "The deployment serial (usually \'0\')",\n            "type": "number",\n            "default": 0\n          },\n          "default": {\n            "description": "Find and use the default ostree deployment",\n            "type": "boolean",\n            "default": false\n          }\n        }\n      },\n      "static-configs": {\n        "description": "Install the grub configs defined for Fedora CoreOS",\n        "type": "boolean"\n      },\n      "bios": {\n        "additionalProperties": false,\n        "type": "object",\n        "required": [\n          "device"\n        ],\n        "properties": {\n          "device": {\n            "description": "Name of stage device to install GRUB for BIOS-based systems.",\n            "type": "string"\n          },\n          "partition": {\n            "description": "The partition on the stage device to install to, if installing to a partition",\n            "type": "number"\n          }\n        }\n      }\n    }\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>i,a:()=>d});var t=o(7294);const s={},r=t.createContext(s);function d(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);