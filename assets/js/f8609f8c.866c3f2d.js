"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[7437],{5542:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>n,metadata:()=>d,toc:()=>l});var i=o(5893),t=o(1151);const n={},r="org.osbuild.mkinitcpio",d={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.mkinitcpio",title:"org.osbuild.mkinitcpio",description:"Run mkinitcpio for Arch based distributions",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.mkinitcpio.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkinitcpio",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkinitcpio",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.mkinitcpio.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.mkfs.xfs",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.mkfs.xfs"},next:{title:"org.osbuild.modprobe",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.modprobe"}},c={},l=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"orgosbuildmkinitcpio",children:"org.osbuild.mkinitcpio"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Run mkinitcpio for Arch based distributions"})}),"\n",(0,i.jsxs)(s.p,{children:["WARNING: This stage uses chroot() to run the ",(0,i.jsx)(s.code,{children:"mkinitcpio"})," binary\nfrom inside the tree."]}),"\n",(0,i.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "properties": {\n    "preset": {\n      "type": "string",\n      "description": "mkinitcpio preset file to use",\n      "default": "linux"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:"{}\n"})})]})}function a(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},1151:(e,s,o)=>{o.d(s,{Z:()=>d,a:()=>r});var i=o(7294);const t={},n=i.createContext(t);function r(e){const s=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);