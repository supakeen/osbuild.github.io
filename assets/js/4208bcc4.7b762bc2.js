"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[5822],{4140:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var o=s(5893),r=s(1151);const t={},i="org.osbuild.firewall",l={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.firewall",title:"org.osbuild.firewall",description:"Configure firewall",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.firewall.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.firewall",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.firewall",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.firewall.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.fdo",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.fdo"},next:{title:"org.osbuild.first-boot",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.first-boot"}},d={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"orgosbuildfirewall",children:"org.osbuild.firewall"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Configure firewall"})}),"\n",(0,o.jsxs)(n.p,{children:["Configure firewalld using the ",(0,o.jsx)(n.code,{children:"firewall-offline-cmd"})," from inside the target.\nThis stage adds each of the given ",(0,o.jsx)(n.code,{children:"ports"})," and ",(0,o.jsx)(n.code,{children:"enabled_services"})," to the default\nfirewall zone using the ",(0,o.jsx)(n.code,{children:"--port"})," and ",(0,o.jsx)(n.code,{children:"--service"})," options, then removes the\nservices listed in ",(0,o.jsx)(n.code,{children:"disabled_services"})," with ",(0,o.jsx)(n.code,{children:"--remove-service"}),'.\nPorts should be specified as "portid',":protocol",'" or "portid-portid',":protocol",'",\nwhere "portid" is a number (or a port name from ',(0,o.jsx)(n.code,{children:"/etc/services"}),', like "ssh" or\n"echo") and "protocol" is one of "tcp", "udp", "sctp", or "dccp".\nEnabling or disabling a service that is already enabled or disabled will not\ncause an error.\nAttempting to enable/disable an unknown service name will cause this stage to\nfail. Known service names are determined by the contents of firewalld\'s\nconfiguration directories, usually ',(0,o.jsx)(n.code,{children:"/\\{lib,etc\\}/firewalld/services/*.xml"}),", and\nmay vary from release to release.\nWARNING: this stage uses ",(0,o.jsx)(n.code,{children:"chroot"})," to run ",(0,o.jsx)(n.code,{children:"firewall-offline-cmd"})," inside the\ntarget tree, which means it may fail unexpectedly when the buildhost and target\nare different arches or OSes."]}),"\n",(0,o.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "properties": {\n    "ports": {\n      "description": "Ports (or port ranges) to open",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "A port or port range: \'portid[-portid]:protocol\'",\n        "pattern": ".:(tcp|udp|sctp|dccp)$"\n      }\n    },\n    "enabled_services": {\n      "description": "Network services to allow in the default firewall zone",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "Service name (from /{lib,etc}/firewalld/services/*.xml)"\n      }\n    },\n    "disabled_services": {\n      "description": "Network services to remove from the default firewall zone",\n      "type": "array",\n      "items": {\n        "type": "string",\n        "description": "Service name (from /{lib,etc}/firewalld/services/*.xml)"\n      }\n    },\n    "default_zone": {\n      "description": "Set default zone for connections and interfaces where no zone has been selected.",\n      "type": "string"\n    },\n    "zones": {\n      "description": "Bind a list of network sources to a zone to restrict traffic from those sources based on the settings of the zone.",\n      "type": "array",\n      "minItems": 1,\n      "items": {\n        "additionalProperties": false,\n        "type": "object",\n        "description": "configuration for each zone",\n        "required": [\n          "name",\n          "sources"\n        ],\n        "properties": {\n          "name": {\n            "type": "string",\n            "description": "name of the zone, if left empty the sources will apply to the default zone.",\n            "pattern": "^[a-zA-Z0-9_-]+$"\n          },\n          "sources": {\n            "type": "array",\n            "description": "list of sources for the zone",\n            "items": {\n              "additionalProperties": false,\n              "type": "string",\n              "description": "A source: <source>[/<mask>]|<MAC>|ipset:<ipset>"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>i});var o=s(7294);const r={},t=o.createContext(r);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);