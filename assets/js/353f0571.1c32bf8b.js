"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[5586],{1707:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var t=o(5893),i=o(1151);const r={},s="org.osbuild.nm.conn",d={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.nm.conn",title:"org.osbuild.nm.conn",description:"Configure Network Manager Connections",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.nm.conn.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.nm.conn",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.nm.conn",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.nm.conn.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.nm.conf",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.nm.conf"},next:{title:"org.osbuild.noop",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.noop"}},a={},c=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function p(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"orgosbuildnmconn",children:"org.osbuild.nm.conn"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Configure Network Manager Connections"})}),"\n",(0,t.jsxs)(e.p,{children:["This stage allows to create system connections for network manager.\nCurrently the connections are created in directory for shipped\nsystem connections, ",(0,t.jsx)(e.code,{children:"/usr/lib/NetworkManager/system-connections"}),",\nif ",(0,t.jsx)(e.code,{children:"filename"})," is used. Otherwise, ",(0,t.jsx)(e.code,{children:"path"}),' can be used to create\nconnections in any directory with any suffix.\nCurrently only configuring "ethernet" connections is supported,\nand here only a subset of the available options. See the schema\nfor more information.']}),"\n",(0,t.jsx)(e.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'{\n  "definitions": {\n    "connection": {\n      "additionalProperties": false,\n      "required": [\n        "id",\n        "uuid",\n        "type"\n      ],\n      "type": "object",\n      "properties": {\n        "uuid": {\n          "type": "string"\n        },\n        "id": {\n          "type": "string"\n        },\n        "type": {\n          "type": "string"\n        },\n        "autoconnect": {\n          "type": "boolean"\n        },\n        "interface-name": {\n          "type": "string"\n        },\n        "autoconnect-priority": {\n          "type": "number"\n        }\n      }\n    },\n    "ethernet": {\n      "additionalProperties": false,\n      "required": [\n        "connection"\n      ],\n      "type": "object",\n      "properties": {\n        "connection": {\n          "allOf": [\n            {\n              "$ref": "#/definitions/connection"\n            },\n            {\n              "$ref": "#/definitions/802-3-ethernet-connection"\n            }\n          ]\n        },\n        "ipv4": {\n          "$ref": "#/definitions/ipv4"\n        },\n        "ipv6": {\n          "$ref": "#/definitions/ipv6"\n        },\n        "ethernet": {\n          "$ref": "#/definitions/802-3-ethernet"\n        }\n      }\n    },\n    "802-3-ethernet-connection": {\n      "additionalProperties": true,\n      "required": [\n        "type"\n      ],\n      "type": "object",\n      "properties": {\n        "type": {\n          "enum": [\n            "802-3-ethernet",\n            "ethernet"\n          ]\n        }\n      }\n    },\n    "ipv4": {\n      "oneOf": [\n        {\n          "$ref": "#/definitions/ipv4-ignore"\n        },\n        {\n          "$ref": "#/definitions/ipv4-auto"\n        },\n        {\n          "$ref": "#/definitions/ipv4-manual"\n        }\n      ]\n    },\n    "ipv4-ignore": {\n      "additionalProperties": false,\n      "required": [\n        "method"\n      ],\n      "properties": {\n        "method": {\n          "enum": [\n            "ignore"\n          ]\n        }\n      }\n    },\n    "ipv4-auto": {\n      "additionalProperties": false,\n      "required": [\n        "method"\n      ],\n      "properties": {\n        "method": {\n          "enum": [\n            "auto"\n          ]\n        },\n        "dns-search": {\n          "type": "string"\n        }\n      }\n    },\n    "ipv4-manual": {\n      "additionalProperties": false,\n      "required": [\n        "method"\n      ],\n      "properties": {\n        "method": {\n          "enum": [\n            "manual"\n          ]\n        },\n        "address": {\n          "type": "array",\n          "items": {\n            "$ref": "#/definitions/ipv4-address"\n          }\n        }\n      }\n    },\n    "ipv4-address": {\n      "type": "string"\n    },\n    "ipv6": {\n      "oneOf": [\n        {\n          "$ref": "#/definitions/ipv6-ignore"\n        }\n      ]\n    },\n    "ipv6-ignore": {\n      "additionalProperties": false,\n      "required": [\n        "method"\n      ],\n      "properties": {\n        "method": {\n          "enum": [\n            "ignore"\n          ]\n        }\n      }\n    },\n    "802-3-ethernet": {\n      "additionalProperties": true,\n      "type": "object",\n      "properties": {\n        "mac-address": {\n          "type": "string"\n        }\n      }\n    }\n  },\n  "oneOf": [\n    {\n      "additionalProperties": false,\n      "required": [\n        "filename",\n        "settings"\n      ],\n      "properties": {\n        "filename": {\n          "type": "string",\n          "pattern": "^[\\\\w.-]{1,242}.nmconnection$"\n        },\n        "settings": {\n          "oneOf": [\n            {\n              "$ref": "#/definitions/ethernet"\n            }\n          ]\n        }\n      }\n    },\n    {\n      "additionalProperties": false,\n      "required": [\n        "path",\n        "settings"\n      ],\n      "properties": {\n        "path": {\n          "type": "string"\n        },\n        "settings": {\n          "oneOf": [\n            {\n              "$ref": "#/definitions/ethernet"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:"{}\n"})})]})}function l(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},1151:(n,e,o)=>{o.d(e,{Z:()=>d,a:()=>s});var t=o(7294);const i={},r=t.createContext(i);function s(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);