"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[9993],{8188:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var s=t(5893),i=t(1151);const r={},o="org.osbuild.systemd.unit.create",l={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd.unit.create",title:"org.osbuild.systemd.unit.create",description:"Create Systemd services unit file",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.systemd.unit.create.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd.unit.create",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd.unit.create",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.systemd.unit.create.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.systemd.preset",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd.preset"},next:{title:"org.osbuild.systemd.unit",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.systemd.unit"}},d={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"orgosbuildsystemdunitcreate",children:"org.osbuild.systemd.unit.create"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create Systemd services unit file"})}),"\n",(0,s.jsxs)(n.p,{children:["This stage allows to create Systemd unit files in\n",(0,s.jsx)(n.code,{children:"/usr/lib/systemd/system/"}),". The ",(0,s.jsx)(n.code,{children:"filename"})," property specifies the\n'.service' file to be added. These names are validated using the\nsame rules as specified by systemd.unit(5) and they must contain the\n'.service' suffix (other types of unit files are not supported).\n'unit-type' determines if the unit file is created at global or\nsystem level,'unit-path' will determine the systemd unit load path."]}),"\n",(0,s.jsx)(n.p,{children:"The Unit configuration can currently specify the following subset\nof options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["'Unit' section","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"'Description' - string"}),"\n",(0,s.jsx)(n.li,{children:"'ConditionPathExists' - string"}),"\n",(0,s.jsx)(n.li,{children:"'ConditionPathIsDirectory' - string"}),"\n",(0,s.jsx)(n.li,{children:"'DefaultDependencies' - bool"}),"\n",(0,s.jsx)(n.li,{children:"'Requires' - [strings]"}),"\n",(0,s.jsx)(n.li,{children:"'Wants' - [strings]"}),"\n",(0,s.jsx)(n.li,{children:"'After' - [strings]"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["'Service' section","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"'Type' - string"}),"\n",(0,s.jsx)(n.li,{children:"'RemainAfterExit' - bool"}),"\n",(0,s.jsx)(n.li,{children:"'ExecStartPre' - [string]"}),"\n",(0,s.jsx)(n.li,{children:"'ExecStopPost' - [string]"}),"\n",(0,s.jsx)(n.li,{children:"'ExecStart' - [string]"}),"\n",(0,s.jsx)(n.li,{children:"'Environment' - [object]"}),"\n",(0,s.jsx)(n.li,{children:"'EnvironmentFile' - [string]"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["'Install' section","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"'WantedBy' - [string]"}),"\n",(0,s.jsx)(n.li,{children:"'RequiredBy' - [string]"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "required": [\n    "filename",\n    "config"\n  ],\n  "properties": {\n    "filename": {\n      "type": "string",\n      "pattern": "^[\\\\w:.\\\\\\\\-]+[@]{0,1}[\\\\w:.\\\\\\\\-]*\\\\.service$"\n    },\n    "unit-type": {\n      "type": "string",\n      "enum": [\n        "system",\n        "global"\n      ],\n      "default": "system",\n      "description": "Selects between systemd system or global unit to add dropin"\n    },\n    "unit-path": {\n      "type": "string",\n      "enum": [\n        "usr",\n        "etc"\n      ],\n      "default": "usr",\n      "description": "Define the system load path"\n    },\n    "config": {\n      "additionalProperties": false,\n      "type": "object",\n      "required": [\n        "Unit",\n        "Service",\n        "Install"\n      ],\n      "description": "Configuration for a \'.service\' unit.",\n      "properties": {\n        "Unit": {\n          "additionalProperties": false,\n          "type": "object",\n          "description": "\'Unit\' configuration section of a unit file.",\n          "properties": {\n            "Description": {\n              "type": "string"\n            },\n            "Wants": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "After": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "Requires": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "ConditionPathExists": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "ConditionPathIsDirectory": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "DefaultDependencies": {\n              "type": "boolean"\n            }\n          }\n        },\n        "Service": {\n          "additionalProperties": false,\n          "type": "object",\n          "description": "\'Service\' configuration section of a unit file.",\n          "properties": {\n            "Type": {\n              "type": "string",\n              "enum": [\n                "simple",\n                "exec",\n                "forking",\n                "oneshot",\n                "dbus",\n                "notify",\n                "notify-reload",\n                "idle"\n              ]\n            },\n            "RemainAfterExit": {\n              "type": "boolean"\n            },\n            "ExecStartPre": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "ExecStopPost": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "ExecStart": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "Environment": {\n              "type": "array",\n              "description": "Sets environment variables for executed process.",\n              "items": {\n                "type": "object",\n                "description": "Sets environment variables for executed process.",\n                "additionalProperties": false,\n                "properties": {\n                  "key": {\n                    "type": "string",\n                    "pattern": "^[A-Za-z_][A-Za-z0-9_]*"\n                  },\n                  "value": {\n                    "type": "string"\n                  }\n                }\n              }\n            },\n            "EnvironmentFile": {\n              "type": "array",\n              "description": "Path to file that contains environment variables to set for the process.",\n              "items": {\n                "type": "string"\n              }\n            }\n          }\n        },\n        "Install": {\n          "additionalProperties": false,\n          "type": "object",\n          "description": "\'Install\' configuration section of a unit file.",\n          "properties": {\n            "WantedBy": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            },\n            "RequiredBy": {\n              "type": "array",\n              "items": {\n                "type": "string"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var s=t(7294);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);