"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[2166],{5941:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=o(5893),s=o(1151);const r={},i="org.osbuild.containers.storage.conf",a={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.containers.storage.conf",title:"org.osbuild.containers.storage.conf",description:"Edit containers-storage.conf(5) files.",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.containers.storage.conf.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.containers.storage.conf",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.containers.storage.conf",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.containers.storage.conf.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.container-deploy",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.container-deploy"},next:{title:"org.osbuild.copy",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.copy"}},c={},d=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"orgosbuildcontainersstorageconf",children:"org.osbuild.containers.storage.conf"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Edit containers-storage.conf(5) files."})}),"\n",(0,t.jsxs)(n.p,{children:["This stage can be used to create or modify ",(0,t.jsx)(n.code,{children:"containers-storage.conf"}),"\nconfiguration files. The default strategy is to merge the specified\noptions with the existing options."]}),"\n",(0,t.jsx)(n.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "definitions": {\n    "storage": {\n      "type": "object",\n      "additionalProperties": false,\n      "minProperties": 1,\n      "properties": {\n        "driver": {\n          "description": "container storage driver.",\n          "type": "string",\n          "enum": [\n            "overlay",\n            "vfs",\n            "devmapper",\n            "aufs",\n            "btrfs",\n            "zfs"\n          ]\n        },\n        "graphroot": {\n          "description": "container storage graph directory.",\n          "type": "string"\n        },\n        "runroot": {\n          "description": "container storage run directory.",\n          "type": "string"\n        },\n        "transient_store": {\n          "description": "Make the container store not persist across reboot.",\n          "type": "boolean"\n        },\n        "options": {\n          "$ref": "#/definitions/storage-options"\n        }\n      }\n    },\n    "storage-options": {\n      "type": "object",\n      "additionalProperties": false,\n      "minProperties": 1,\n      "properties": {\n        "additionalimagestores": {\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        "pull_options": {\n          "$ref": "#/definitions/storage-options-pulloptions"\n        },\n        "overlay": {\n          "$ref": "#/definitions/storage-options-overlay"\n        }\n      }\n    },\n    "storage-options-pulloptions": {\n      "type": "object",\n      "additionalProperties": false,\n      "minProperties": 1,\n      "properties": {\n        "enable_partial_images": {\n          "type": "string",\n          "enum": [\n            "true",\n            "false"\n          ]\n        },\n        "use_hard_links": {\n          "type": "string",\n          "enum": [\n            "true",\n            "false"\n          ]\n        },\n        "convert_images": {\n          "type": "string",\n          "enum": [\n            "true",\n            "false"\n          ]\n        }\n      }\n    },\n    "storage-options-overlay": {\n      "type": "object",\n      "additionalProperties": false,\n      "minProperties": 1,\n      "properties": {\n        "mountopt": {\n          "type": "string"\n        }\n      }\n    }\n  },\n  "additionalProperties": false,\n  "required": [\n    "config"\n  ],\n  "properties": {\n    "filename": {\n      "type": "string",\n      "description": "location of the configuration file.",\n      "default": "/etc/containers/storage.conf",\n      "enum": [\n        "/etc/containers/storage.conf",\n        "/usr/share/containers/storage.conf"\n      ]\n    },\n    "filebase": {\n      "type": "string",\n      "description": "Read the base configuration from this file."\n    },\n    "comment": {\n      "type": "array",\n      "items": {\n        "type": "string"\n      }\n    },\n    "config": {\n      "additionalProperties": false,\n      "type": "object",\n      "description": "storage configuration",\n      "minProperties": 1,\n      "properties": {\n        "storage": {\n          "$ref": "#/definitions/storage"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:"{}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>a,a:()=>i});var t=o(7294);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);