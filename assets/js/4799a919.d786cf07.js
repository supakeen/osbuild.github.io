"use strict";(self.webpackChunksaurus=self.webpackChunksaurus||[]).push([[1392],{2183:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var n=t(5893),i=t(1151);const r={},o="org.osbuild.truncate",d={id:"developer-guide/projects/osbuild/modules/stages/org.osbuild.truncate",title:"org.osbuild.truncate",description:"Create, shrink or extend a file.",source:"@site/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.truncate.md",sourceDirName:"developer-guide/02-projects/osbuild/modules/stages",slug:"/developer-guide/projects/osbuild/modules/stages/org.osbuild.truncate",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.truncate",draft:!1,unlisted:!1,editUrl:"https://github.com/osbuild/saurus/tree/main/docs/developer-guide/02-projects/osbuild/modules/stages/org.osbuild.truncate.md",tags:[],version:"current",frontMatter:{},sidebar:"developer",previous:{title:"org.osbuild.tmpfilesd",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.tmpfilesd"},next:{title:"org.osbuild.tuned",permalink:"/docs/developer-guide/projects/osbuild/modules/stages/org.osbuild.tuned"}},l={},a=[{value:"Schema 1",id:"schema-1",level:2},{value:"Schema 2",id:"schema-2",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"orgosbuildtruncate",children:"org.osbuild.truncate"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Create, shrink or extend a file."})}),"\n",(0,n.jsxs)(s.p,{children:["The file specified via ",(0,n.jsx)(s.code,{children:"filename"})," is extended or shrunk to the\nnew size specified via the ",(0,n.jsx)(s.code,{children:"size"}),' parameter. If the file exists\nand the new size is smaller, data past the new size will be\ndiscarded. If the file exists and the new size is bigger, it\nwill be extended by filling the new area with zeros.\nIf the file does not yet exist it will be created.\nNB: In general file systems will not actually reserve the full\nrequested amount but instead a "sparse file" will be created.\nTherefore the actual disk usage will be different from the\n"apparent" size of the file, which is reflected by "size" (the\napparent size) vs. "blocks" (the actual used space) fields\nshown in the ',(0,n.jsx)(s.code,{children:"stat"})," call."]}),"\n",(0,n.jsx)(s.h2,{id:"schema-1",children:"Schema 1"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "additionalProperties": false,\n  "required": [\n    "filename",\n    "size"\n  ],\n  "properties": {\n    "filename": {\n      "description": "Image filename",\n      "type": "string"\n    },\n    "size": {\n      "description": "New desired size",\n      "type": "string"\n    }\n  }\n}\n'})}),"\n",(0,n.jsx)(s.h2,{id:"schema-2",children:"Schema 2"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:"{}\n"})})]})}function u(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>d,a:()=>o});var n=t(7294);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);